// <auto-generated />
using Exercise2.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Exercise2.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20250222191457_redo_db")]
    partial class redo_db
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Exercise2.Models.Destination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Destinations");
                });

            modelBuilder.Entity("Exercise2.Models.Guide", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Guides");
                });

            modelBuilder.Entity("Exercise2.Models.Passport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PassportNumber")
                        .HasColumnType("longtext");

                    b.Property<int>("TravellerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TravellerId")
                        .IsUnique();

                    b.ToTable("Passports");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PassportNumber = "123456",
                            TravellerId = 1
                        },
                        new
                        {
                            Id = 2,
                            PassportNumber = "654321",
                            TravellerId = 2
                        });
                });

            modelBuilder.Entity("Exercise2.Models.Tour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GuideId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("GuideId");

                    b.ToTable("Tours");
                });

            modelBuilder.Entity("Exercise2.Models.Traveller", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Travellers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "John Doe"
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Jane Doe"
                        });
                });

            modelBuilder.Entity("Exercise2.Models.TravellerDestination", b =>
                {
                    b.Property<int>("DestinationId")
                        .HasColumnType("int");

                    b.Property<int>("TravellersId")
                        .HasColumnType("int");

                    b.Property<int>("TravellerId")
                        .HasColumnType("int");

                    b.HasKey("DestinationId", "TravellersId");

                    b.HasIndex("TravellerId");

                    b.HasIndex("TravellersId");

                    b.ToTable("TravellerDestination");
                });

            modelBuilder.Entity("Exercise2.Models.Passport", b =>
                {
                    b.HasOne("Exercise2.Models.Traveller", "Traveller")
                        .WithOne("Passport")
                        .HasForeignKey("Exercise2.Models.Passport", "TravellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Traveller");
                });

            modelBuilder.Entity("Exercise2.Models.Tour", b =>
                {
                    b.HasOne("Exercise2.Models.Guide", "Guide")
                        .WithMany("Tours")
                        .HasForeignKey("GuideId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guide");
                });

            modelBuilder.Entity("Exercise2.Models.TravellerDestination", b =>
                {
                    b.HasOne("Exercise2.Models.Destination", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Exercise2.Models.Traveller", "Traveller")
                        .WithMany()
                        .HasForeignKey("TravellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Exercise2.Models.Traveller", null)
                        .WithMany()
                        .HasForeignKey("TravellersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Destination");

                    b.Navigation("Traveller");
                });

            modelBuilder.Entity("Exercise2.Models.Guide", b =>
                {
                    b.Navigation("Tours");
                });

            modelBuilder.Entity("Exercise2.Models.Traveller", b =>
                {
                    b.Navigation("Passport");
                });
#pragma warning restore 612, 618
        }
    }
}
